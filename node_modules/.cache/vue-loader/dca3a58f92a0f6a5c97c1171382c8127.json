{"remainingRequest":"C:\\Users\\Adria\\product_landing_page\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Adria\\product_landing_page\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Adria\\product_landing_page\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Adria\\product_landing_page\\src\\components\\Reviews.vue?vue&type=template&id=3010beca&","dependencies":[{"path":"C:\\Users\\Adria\\product_landing_page\\src\\components\\Reviews.vue","mtime":1605494734687},{"path":"C:\\Users\\Adria\\product_landing_page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Adria\\product_landing_page\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Adria\\product_landing_page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Adria\\product_landing_page\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}